{"version":3,"sources":["components/body/body.tsx","components/gallows/gallows.tsx","components/keyboard/keyboard.tsx","components/word/word.tsx","components/app/app.tsx","index.tsx"],"names":["Body","missesCount","won","className","classNames","Gallows","children","rows","Keyboard","onKeyPress","pressedKeys","map","row","i","key","includes","onClick","Word","characters","word","split","char","toUpperCase","App","useState","setMissesCount","correctCount","setCorrectCount","setPressedKeys","uniqCharactersCount","Set","size","useCallback","prevCorrectCount","prevMissedCount","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c8c1a94.chunk.js","sourcesContent":["import classNames from \"classnames\";\nimport React from \"react\";\nimport \"./body.scss\";\n\nexport const Body = ({\n  missesCount = 0,\n  won,\n}: {\n  missesCount: number;\n  won: boolean;\n}) => {\n  return (\n    <div\n      className={classNames(\"body\", {\n        \"body--dead\": missesCount > 5,\n        \"body--won\": won,\n      })}\n    >\n      <div\n        className={classNames(\"body__head\", {\n          \"body__head--missed\": missesCount > 0,\n          \"body__head--dead\": missesCount > 5,\n        })}\n      />\n      <div\n        className={classNames(\"body__torso\", {\n          \"body__torso--missed\": missesCount > 1,\n        })}\n      >\n        <div\n          className={classNames(\"body__hand body__hand--left\", {\n            \"body__hand--missed\": missesCount > 2,\n          })}\n        />\n        <div\n          className={classNames(\"body__hand body__hand--right\", {\n            \"body__hand--missed\": missesCount > 3,\n          })}\n        />\n        <div\n          className={classNames(\"body__leg body__leg--left\", {\n            \"body__leg--missed\": missesCount > 4,\n          })}\n        />\n        <div\n          className={classNames(\"body__leg body__leg--right\", {\n            \"body__leg--missed\": missesCount > 5,\n          })}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./gallows.scss\";\n\nexport const Gallows = ({ children }: { children: React.ReactElement }) => {\n  return (\n    <div className=\"gallows\">\n      <div className=\"gallows__rope\" />\n      <div className=\"gallows__joist\" />\n      <div className=\"gallows__stand\" />\n      <div className=\"gallows__floor\" />\n      {children}\n    </div>\n  );\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport \"./keyboard.scss\";\n\nconst row1 = [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"];\nconst row2 = [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"];\nconst row3 = [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"];\nconst rows = [row1, row2, row3];\nexport const Keyboard = ({\n  onKeyPress,\n  pressedKeys,\n}: {\n  onKeyPress: (key: string) => void;\n  pressedKeys: Array<string>;\n}) => {\n  return (\n    <div className=\"keyboard\">\n      {rows.map((row, i) => (\n        <div className=\"keyboard__row\" key={i}>\n          {row.map((key) => (\n            <button\n              key={key}\n              className={classNames(\"keyboard__key\", {\n                \"keyboard__key--pressed\": pressedKeys.includes(key),\n              })}\n              onClick={() => onKeyPress(key)}\n            >\n              {key}\n            </button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport \"./word.scss\";\n\nexport const Word = ({\n  pressedKeys,\n  word,\n}: {\n  pressedKeys: Array<string>;\n  word: string;\n}) => {\n  const characters = word.split(\"\");\n  return (\n    <div className=\"word\">\n      {characters.map((char) => (\n        <div\n          className={classNames(\"word__char\", {\n            \"word__char--correct\": pressedKeys.includes(char.toUpperCase()),\n          })}\n        >\n          {char}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useCallback, useState } from \"react\";\nimport { Body } from \"../body/body\";\nimport { Gallows } from \"../gallows/gallows\";\nimport { Keyboard } from \"../keyboard/keyboard\";\nimport { Word } from \"../word/word\";\nimport \"./app.scss\";\n\nexport const App = () => {\n  const [missesCount, setMissesCount] = useState(0);\n  const [correctCount, setCorrectCount] = useState(0);\n  const [pressedKeys, setPressedKeys] = useState<Array<string>>([]);\n  const word = \"Tatsiak\".toUpperCase();\n  const uniqCharactersCount = new Set(word.split(\"\")).size;\n\n  const onKeyPress = useCallback(\n    (key: string) => {\n      setPressedKeys([...pressedKeys, key]);\n      if (!word.includes(key)) {\n        setMissesCount((prevMissedCount) => prevMissedCount + 1);\n      } else {\n        setCorrectCount((prevCorrectCount) => prevCorrectCount + 1);\n      }\n    },\n    [pressedKeys]\n  );\n\n  return (\n    <div className=\"app\">\n      <h1>Hangman Game</h1>\n      <Gallows>\n        <Body\n          missesCount={missesCount}\n          won={correctCount === uniqCharactersCount}\n        />\n      </Gallows>\n      <Word pressedKeys={pressedKeys} word={word} />\n      {missesCount > 5 || correctCount === uniqCharactersCount ? (\n        <>\n          <h2>\n            You {correctCount === uniqCharactersCount ? \"won ðŸŽ‰\" : \"loose ðŸ˜ž\"}\n          </h2>\n          <button\n            onClick={() => {\n              setMissesCount(0);\n              setCorrectCount(0);\n              setPressedKeys([]);\n            }}\n          >\n            Try again\n          </button>\n        </>\n      ) : (\n        <Keyboard pressedKeys={pressedKeys} onKeyPress={onKeyPress} />\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/app/app\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}